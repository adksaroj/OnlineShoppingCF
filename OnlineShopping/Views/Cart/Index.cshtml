@model List<OnlineShopping.Models.CartViewModel>

@{
    ViewBag.Title = "Cart";
}
<br />


@if (Model?.Count > 0)
{
    <h1 class="text-center h1" id="cartSummary">Cart Summary</h1>
    @Html.ActionLink("Proceed to Checkout", "index", "checkout", null, htmlAttributes: new { @class = "btn btn-success pull-right" })
    @Html.Raw("<br /><br /><br />")
    decimal totalCost = 0;
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model[0].product.ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].product.Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].product.Cost)
                </th>
                <th>Actions</th>
            </tr>

            @foreach (var item in Model)
            {
                totalCost += item.product.Cost;

                <tr>
                    <td>
                        <img class="img-thumbnail img-responsive" width="150" height="300" src="@Url.Content("~/static/products/")@item.product.ImageName" alt="@item.product.ImageName" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.product.ProductName)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.product.Category)
                    </td>

                    <td>
                        @Html.EditorFor(modelItem => item.Quantity, new { htmlAttributes = new { @class = "form-control", id = "cart-quantity-input" } })
                        @Html.ValidationMessageFor(modelItem => item.Quantity, "", new { @class = "text-danger" })
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.product.Cost)
                    </td>
                    <td>
                        <a title="Remove from Cart" , class="btn btn-danger glyphicon glyphicon-trash" href="@Url.Action("remove", new { id = item.product.Id })"></a>
                    </td>
                </tr>
            }
            <tfoot>
                <tr>
                    <th class="text-center">Total</th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th>@Math.Round(totalCost, 2)</th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>
}
else
{
    <h1 class="text-center text-danger" id="cartSummary">Cart is empty</h1>
    <p align="center"> <a class="text-center btn btn-success" href="~/product/grid">Browse Products</a></p>
}